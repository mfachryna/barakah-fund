{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "barakah-fund.fullname" . }}-postgresql
  labels:
    {{- include "barakah-fund.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "barakah-fund.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "barakah-fund.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      containers:
        - name: postgresql
          image: postgres:17-alpine
          ports:
            - containerPort: 5432
              name: postgresql
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password }}
            - name: POSTGRES_INITDB_ARGS
              value: "--encoding=UTF8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
          resources:
            {{- toYaml .Values.postgresql.primary.resources | nindent 12 }}
      volumes:
        - name: postgresql-data
          emptyDir: {}
        - name: init-scripts
          configMap:
            name: {{ include "barakah-fund.fullname" . }}-postgresql-init
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "barakah-fund.fullname" . }}-postgresql
  labels:
    {{- include "barakah-fund.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgresql
  selector:
    {{- include "barakah-fund.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: database
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "barakah-fund.fullname" . }}-postgresql-init
  labels:
    {{- include "barakah-fund.labels" . | nindent 4 }}
data:
  01-init-keycloak.sql: |
      -- Create Keycloak database and user
      CREATE DATABASE keycloak;
      CREATE USER keycloak_user WITH ENCRYPTED PASSWORD 'keycloak_password123';
      GRANT ALL PRIVILEGES ON DATABASE keycloak TO keycloak_user;
      ALTER DATABASE keycloak OWNER TO keycloak_user;
      
      -- Create User Service database and user
      CREATE DATABASE barakah_users;
      CREATE USER barakah_users_user WITH ENCRYPTED PASSWORD 'barakah_user_password';
      GRANT ALL PRIVILEGES ON DATABASE barakah_users TO barakah_users_user;
      ALTER DATABASE barakah_users OWNER TO barakah_users_user;
      
      -- Create other service databases
      CREATE DATABASE barakah_accounts;
      CREATE DATABASE barakah_transactions;

      CREATE USER barakah_account WITH ENCRYPTED PASSWORD 'barakah_account_password';
      CREATE USER barakah_transaction WITH ENCRYPTED PASSWORD 'barakah_transaction_password';

      GRANT ALL PRIVILEGES ON DATABASE barakah_accounts TO barakah_account;
      GRANT ALL PRIVILEGES ON DATABASE barakah_transactions TO barakah_transaction;
      
      -- Set schema permissions for all databases
      \c keycloak;
      GRANT ALL ON SCHEMA public TO keycloak_user;
      ALTER SCHEMA public OWNER TO keycloak_user;

      \c barakah_users;
      GRANT ALL ON SCHEMA public TO barakah_users_user;
      ALTER SCHEMA public OWNER TO barakah_users_user;

      \c barakah_accounts;
      GRANT ALL ON SCHEMA public TO barakah_account;
      ALTER SCHEMA public OWNER TO barakah_account;

      \c barakah_transactions;
      GRANT ALL ON SCHEMA public TO barakah_transaction;
      ALTER SCHEMA public OWNER TO barakah_transaction;
{{- end }}