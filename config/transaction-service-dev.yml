spring:
    datasource:
        url: jdbc:postgresql://localhost:5432/barakah_transactions
        username: barakah_transaction
        password: barakah_transaction_password
        driver-class-name: org.postgresql.Driver
        hikari:
            maximum-pool-size: 10
            minimum-idle: 5
            connection-timeout: 20000
            idle-timeout: 300000
            max-lifetime: 1200000

    cloud:
        config:
            enabled: false
        discovery:
            enabled: false
        service-registry:
            auto-registration:
                enabled: false

    jpa:
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                show_sql: true
                format_sql: true
                use_sql_comments: true
                jdbc:
                    batch_size: 20
                order_inserts: true
                order_updates: true
        show-sql: true
        open-in-view: false

    flyway:
        enabled: true
        baseline-on-migrate: true
        locations: classpath:db/migration

    transaction:
        default-timeout: 30

    cache:
        type: redis
        redis:
            time-to-live: 300000
            cache-null-values: false
            key-prefix: "txn:"

    redis:
        host: localhost
        port: 6379
        timeout: 2000
        database: 0
    main:
        allow-bean-definition-overriding: true

server:
    port: 8083
    servlet:
        context-path: /transaction-service
    error:
        include-message: always
        include-binding-errors: always
        include-stacktrace: on_param

grpc:
    server:
        port: 9093
        enable-reflection: true
        max-inbound-message-size: 4MB
        max-outbound-message-size: 4MB
    client:
        account-service:
            address: "static://localhost:9092"
            negotiationType: plaintext
            enableKeepAlive: true
            keepAliveWithoutCalls: true
            keepAliveTime: 30s
            keepAliveTimeout: 5s
            maxInboundMessageSize: 4MB
            maxInboundMetadataSize: 8192
            deadline: 10s
            retry: true
            maxRetryAttempts: 3
            defaultLoadBalancingPolicy: pick_first

eureka:
    client:
        service-url:
            defaultZone: http://localhost:8761/eureka/
        register-with-eureka: true
        fetch-registry: true
        healthcheck:
            enabled: true
        initial-instance-info-replication-interval-seconds: 5
        instance-info-replication-interval-seconds: 5
    instance:
        prefer-ip-address: true
        hostname: localhost
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 10
        metadata-map:
            grpc.port: 9091
            management.context-path: /user-service/actuator

keycloak:
    auth-server-url: http://localhost:8080
    realm: barakah
    resource: user-service
    credentials:
        secret: user-service-secret-change-me

    admin:
        username: admin
        password: admin
        client-id: admin-cli

    mock:
        enabled: true

management:
    endpoints:
        web:
            exposure:
                include: health,info,metrics,prometheus,flyway,liquibase
            base-path: /actuator
    endpoint:
        health:
            show-details: always
            show-components: always
        metrics:
            enabled: true
    health:
        eureka:
            enabled: true
        db:
            enabled: true
    metrics:
        export:
            prometheus:
                enabled: true

logging:
    level:
        com.barakah: DEBUG
        com.barakah.user: TRACE
        com.barakah.shared: DEBUG
        org.springframework.security: DEBUG
        org.springframework.web: DEBUG
        org.springframework.transaction: DEBUG
        org.keycloak: DEBUG
        org.hibernate.SQL: DEBUG
        org.hibernate.type.descriptor.sql.BasicBinder: TRACE
        net.devh.boot.grpc: DEBUG
        io.grpc: INFO
        org.flywaydb: INFO
    pattern:
        console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file:
        name: logs/user-service-dev.log
        max-size: 10MB
        max-history: 30

kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9192}
    producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
        acks: all
        retries: 3
        properties:
            enable.idempotence: true
            max.in.flight.requests.per.connection: 1
    consumer:
        group-id: transaction-service
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        auto-offset-reset: earliest

app:
    security:
        cors:
            allowed-origins: "http://localhost:3000,http://localhost:4200,http://localhost:8080"
            allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
            allowed-headers: "*"
            allow-credentials: true
            max-age: 3600
        jwt:
            secret: dev-secret-key-change-in-production
            expiration: 86400000

    kafka:
        topics:
            transaction-events: transaction-events
            notification-events: notification-events
            audit-events: audit-events

    user:
        default-role: USER
        password:
            min-length: 8
            require-special-chars: true
        registration:
            email-verification-required: false
            auto-approve: true

    services:
        account-service:
            url: http://localhost:9092
            timeout: 5000
        user-service:
            url: http://localhost:9091
            timeout: 5000
        notification-service:
            url: http://localhost:9094
            timeout: 3000

resilience4j:
    circuitbreaker:
        instances:
            account-service:
                register-health-indicator: true
                minimum-number-of-calls: 5
                failure-rate-threshold: 50
                wait-duration-in-open-state: 30s
                automatic-transition-from-open-to-half-open-enabled: true
                sliding-window-size: 10
                sliding-window-type: count_based
                permitted-number-of-calls-in-half-openState: 3
                record-failure-predicate: com.barakah.shared.config.ServiceFailurePredicate
    retry:
        instances:
            account-service:
                max-attempts: 3
                wait-duration: 2s
                exponential-backoff-multiplier: 2
                # retry-on-result-predicate: com.barakah.shared.config.ServiceRetryPredicate
                retry-exception-predicate: com.barakah.shared.config.ServiceRetryPredicate

    ratelimiter:
        instances:
            transaction-creation:
                limit-for-period: 20
                limit-refresh-period: 60s
                timeout-duration: 2s
            process-transaction:
                limit-for-period: 30
                limit-refresh-period: 60s
                timeout-duration: 1s
            query-transaction:
                limit-for-period: 100
                limit-refresh-period: 60s
                timeout-duration: 500ms
            transaction-queries:
                limit-for-period: 500
                limit-refresh-period: 60s
                timeout-duration: 500ms
            list-transactions:
                limit-for-period: 50
                limit-refresh-period: 60s
                timeout-duration: 1s
            account-service-calls:
                limit-for-period: 200
                limit-refresh-period: 60s
                timeout-duration: 1s

    bulkhead:
        instances:
            transaction-creation:
                max-concurrent-calls: 30
                max-wait-duration: 2s
            transaction-processing:
                max-concurrent-calls: 20
                max-wait-duration: 1s
            transaction-queries:
                max-concurrent-calls: 100
                max-wait-duration: 500ms

rate-limit:
    enabled: true
    global:
        requests-per-minute: 2000
    per-user:
        requests-per-minute: 200
    per-endpoint:
        grpc-create-transaction: 30
        create-transaction: 30

        grpc-get-transaction: 200
        grpc-list-transactions: 100
        grpc-get-account-transactions: 100
        grpc-get-transaction-logs: 50

        grpc-update-transaction: 50
        update-transaction: 50
        process-transaction: 100

features:
    email-verification: false
    sms-verification: false
    audit-logging: true
    rate-limiting: false
    cache-enabled: false
