spring:
    application:
        name: user-service

    cloud:
        config:
            enabled: false
        vault:
            enabled: true
            host: ${SPRING_CLOUD_VAULT_HOST:localhost}
            port: ${SPRING_CLOUD_VAULT_PORT:8200}
            scheme: ${SPRING_CLOUD_VAULT_SCHEME:http}
            authentication: TOKEN
            token: ${SPRING_CLOUD_VAULT_TOKEN:root-token}
            kv:
                enabled: true
                backend: secret
                profile-separator: "/"
                default-context: user-service
                application-name: user-service
            config:
                lifecycle:
                    enabled: true
                    min-renewal: 10s
                    expiry-threshold: 1m

    datasource:
        url: jdbc:postgresql://${vault:secret/data/database/user-service#host:postgres}:${vault:secret/data/database/user-service#port:5432}/${vault:secret/data/database/user-service#database:barakah_main}
        username: ${vault:secret/data/database/user-service#username:barakah_admin}
        password: ${vault:secret/data/database/user-service#password:barakah_admin_pass}
        driver-class-name: org.postgresql.Driver
        hikari:
            maximum-pool-size: 10
            minimum-idle: 5
            connection-timeout: 20000
            idle-timeout: 300000
            max-lifetime: 1200000

    jpa:
        hibernate:
            ddl-auto: update
            naming:
                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                show_sql: true
                format_sql: true
                use_sql_comments: true
                jdbc:
                    batch_size: 20
                order_inserts: true
                order_updates: true
        show-sql: true
        open-in-view: false

    flyway:
        enabled: true
        baseline-on-migrate: true
        baseline-version: 0
        out-of-order: true
        validate-on-migrate: false
        locations: classpath:db/migration

    transaction:
        default-timeout: 30

    data:
        redis:
            host: ${REDIS_HOST:localhost}
            port: ${REDIS_PORT:6379}
            password: ${REDIS_PASSWORD:}
            database: 2
            timeout: 2000
            lettuce:
                pool:
                    max-active: 8
                    max-idle: 8
                    min-idle: 0
                    max-wait: -1ms

    cache:
        type: redis
        redis:
            time-to-live: 3600000
            cache-null-values: false
            use-key-prefix: true
            key-prefix: "user-service:"

server:
    port: 8081
    servlet:
        context-path: /user-service
    error:
        include-message: always
        include-binding-errors: always
        include-stacktrace: on_param

grpc:
    server:
        port: 9091
        enable-reflection: true
        max-inbound-message-size: 4MB
        max-outbound-message-size: 4MB

    client:
        user-service:
            address: discovery:///account-service
            negotiationType: plaintext
            keepAliveTime: 30s
            keepAliveTimeout: 5s
            keepAliveWithoutCalls: true
            maxRetryAttempts: 3
        transaction-service:
            address: discovery:///transaction-service
            negotiationType: plaintext
            keepAliveTime: 30s
            keepAliveTimeout: 5s
            keepAliveWithoutCalls: true
            maxRetryAttempts: 3

eureka:
    client:
        service-url:
            defaultZone: http://${EUREKA_HOST:eureka-server}:${EUREKA_PORT:8761}/eureka/
        eureka-server-connect-timeout-seconds: 5
        eureka-server-read-timeout-seconds: 8
        registry-fetch-interval-seconds: 30
        register-with-eureka: true
        fetch-registry: true
        healthcheck:
            enabled: true
    instance:
        prefer-ip-address: true
        hostname: ${HOSTNAME:localhost}
        instance-id: ${spring.application.name}:${random.value}
        lease-renewal-interval-in-seconds: 30
        lease-expiration-duration-in-seconds: 90
        metadata-map:
            grpc.port: 9091
            management.context-path: /user-service/actuator

keycloak:
    auth-server-url: ${vault:secret/data/keycloak#auth-server-url:http://keycloak:8080}
    realm: ${vault:secret/data/keycloak#realm:barakah}
    resource: ${vault:secret/data/keycloak#resource:user-service}
    credentials:
        secret: ${vault:secret/data/keycloak#client-secret:user-service-secret-change-me}
    admin:
        username: ${KEYCLOAK_ADMIN_USERNAME:admin}
        password: ${KEYCLOAK_ADMIN_PASSWORD:admin123}
        client-id: ${KEYCLOAK_ADMIN_CLIENT_ID:admin-cli}
    mock:
        enabled: ${KEYCLOAK_MOCK_ENABLED:true}

management:
    endpoints:
        web:
            exposure:
                include: "*"
            base-path: /actuator
    endpoint:
        health:
            show-details: always
            show-components: always
        metrics:
            enabled: true
    metrics:
        export:
            prometheus:
                enabled: true
        distribution:
            percentiles-histogram:
                http.server.requests: true
            slo:
                http.server.requests: 50ms,100ms,200ms,300ms,500ms,1s,2s,3s,4s,5s
        tags:
            application: ${spring.application.name}
            environment: ${SPRING_PROFILES_ACTIVE:dev}
    health:
        eureka:
            enabled: true
        db:
            enabled: true
    metrics:
        export:
            prometheus:
                enabled: true

logging:
    level:
        com.barakah: DEBUG
        org.springframework.cloud.gateway: DEBUG
        io.grpc: INFO
        net.devh: DEBUG

app:
    security:
        cors:
            allowed-origins: "http://localhost:3000,http://localhost:4200,http://localhost:8080"
            allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
            allowed-headers: "*"
            allow-credentials: true
            max-age: 3600
        jwt:
            secret: ${JWT_SECRET:dev-secret-key-change-in-production}
            expiration: ${JWT_EXPIRATION:86400000}

    user:
        default-role: USER
        password:
            min-length: 8
            require-special-chars: true
        registration:
            email-verification-required: false
            auto-approve: true

    services:
        auth-service:
            url: http://localhost:8082
            timeout: 5000
        transaction-service:
            url: http://localhost:8083
            timeout: 5000
        notification-service:
            url: http://localhost:8084
            timeout: 3000

barakah:
    rate-limiting:
        enabled: ${features.rate-limiting:true}
        http:
            enabled: true
        grpc:
            enabled: true

        default:
            limit: 100
            duration-seconds: 60

resilience4j:
    circuitbreaker:
        configs:
            default:
                failure-rate-threshold: 50
                minimum-number-of-calls: 10
                sliding-window-size: 20
                wait-duration-in-open-state: 30s
                permitted-number-of-calls-in-half-open-state: 5
                max-wait-duration-in-half-open-state: 10s
                sliding-window-type: count_based
                record-failure-predicate: com.barakah.shared.config.ServiceFailurePredicate

        instances:
            keycloak:
                base-config: default
                failure-rate-threshold: 60
                minimum-number-of-calls: 5
                wait-duration-in-open-state: 60s

            database:
                base-config: default
                failure-rate-threshold: 70
                minimum-number-of-calls: 5
                wait-duration-in-open-state: 30s

    ratelimiter:
        configs:
            default:
                limit-for-period: 100
                limit-refresh-period: 1s
                timeout-duration: 0s

        instances:
            user-creation:
                base-config: default
                limit-for-period: 10
                limit-refresh-period: 1m
                timeout-duration: 2s

            user-queries:
                base-config: default
                limit-for-period: 200
                limit-refresh-period: 1s

            keycloak-operations:
                base-config: default
                limit-for-period: 30
                limit-refresh-period: 1m

    retry:
        configs:
            default:
                max-attempts: 3
                wait-duration: 500ms
                exponential-backoff-multiplier: 2
                # retry-on-result-predicate: com.barakah.shared.config.ServiceRetryPredicate
                retry-exception-predicate: com.barakah.shared.config.ServiceRetryPredicate
                retry-exceptions:
                    - java.net.ConnectException
                    - java.net.SocketTimeoutException
                    - java.util.concurrent.TimeoutException
                    - org.springframework.dao.QueryTimeoutException
                    - org.springframework.dao.TransientDataAccessException
                ignore-exceptions:
                    - java.lang.IllegalArgumentException
                    - java.lang.IllegalStateException
                    - com.barakah.user.exception.UserExceptions$UserAlreadyExistsException
                    - com.barakah.user.exception.UserExceptions$UserNotFoundException
                    - com.barakah.shared.exception.BusinessException

        instances:
            database:
                base-config: default
                max-attempts: 3
                wait-duration: 200ms

            keycloak:
                base-config: default
                max-attempts: 2
                wait-duration: 1000ms

    bulkhead:
        configs:
            default:
                max-concurrent-calls: 50
                max-wait-duration: 1000ms

        instances:
            user-operations:
                base-config: default
                max-concurrent-calls: 30

            keycloak-operations:
                base-config: default
                max-concurrent-calls: 10
